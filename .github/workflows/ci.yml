name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
      backend-tests: ${{ steps.filter.outputs.backend-tests }}
      frontend-tests: ${{ steps.filter.outputs.frontend-tests }}
      docs: ${{ steps.filter.outputs.docs }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            backend:
              - 'backend/**'
              - 'flake.nix'
              - 'flake.lock'
            frontend:
              - 'frontend/**'
              - 'flake.nix'
              - 'flake.lock'
            backend-tests:
              - 'backend/tests/**'
              - 'backend/pytest.ini'
            frontend-tests:
              - 'frontend/src/__tests__/**'
              - 'frontend/vitest.config.ts'
              - 'frontend/tsconfig.json'
            docs:
              - '**/*.md'
              - 'frontend/*.md'
              - 'backend/*.md'

  test-backend:
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: cachix/install-nix-action@v25
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - uses: cachix/cachix-action@v14
        with:
          name: dallas-college-lmic
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Run backend tests
        run: |
          nix develop .#backend -c bash -c "cd backend && pytest --cov=app --cov-report=xml --cov-report=term-missing"

      - name: Run linting
        run: |
          nix develop .#backend -c bash -c "cd backend && ruff check"

      - name: Run type checking
        run: |
          nix develop .#backend -c bash -c "cd backend && mypy app/"

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./backend/coverage.xml
          flags: backend
          name: backend-coverage
          fail_ci_if_error: false

  test-frontend:
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: cachix/install-nix-action@v25
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - uses: cachix/cachix-action@v14
        with:
          name: dallas-college-lmic
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Install dependencies
        run: |
          nix develop .#frontend -c bash -c "cd frontend && npm ci"

      - name: Run tests
        run: |
          nix develop .#frontend -c bash -c "cd frontend && npm test"

      - name: Run type checking
        run: |
          nix develop .#frontend -c bash -c "cd frontend && npm run type-check"

      - name: Generate coverage report
        run: |
          nix develop .#frontend -c bash -c "cd frontend && npm run test:coverage"

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./frontend/coverage/lcov.info
          flags: frontend
          name: frontend-coverage
          fail_ci_if_error: false
