name: Deploy

# This workflow handles deployment only. All building happens in the Build workflow.
# The Nix commands here pull pre-built artifacts from Cachix rather than building from source.
# Only runs when Build workflow completes on the master branch (not on PRs).

on:
  workflow_run:
    workflows: ["Build"]
    types:
      - completed
    branches:
      - master

jobs:
  changes:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'master' }}
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            backend:
              - 'backend/**'
              - 'flake.nix'
              - 'flake.lock'
            frontend:
              - 'frontend/**'
              - 'flake.nix'
              - 'flake.lock'

  deploy-backend:
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: cachix/install-nix-action@v25
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - uses: cachix/cachix-action@v14
        with:
          name: dallas-college-lmic
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Pull Docker image from cache
        run: |
          # This pulls the pre-built image from Cachix (built in Build workflow)
          nix build .#backend-docker

      - name: Load and push docker image
        run: |
          docker load < result
          docker tag spatial-jobs-index-api:latest ghcr.io/dallas-college-lmic/spatial-jobs-index-api:latest
          docker push ghcr.io/dallas-college-lmic/spatial-jobs-index-api:latest

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd ~/projects/spatial-jobs-index-api
            docker compose pull
            docker compose up -d
            sleep 10
            if curl -f -s http://localhost:8000/docs > /dev/null; then
              echo "‚úÖ Deployment successful - API is responding"
            else
              echo "‚ùå Health check failed - API may not be running properly"
              docker compose logs --tail=20
              exit 1
            fi
            echo "üöÄ Deployment completed successfully!"

  deploy-frontend:
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      contents: read
      pages: write
      id-token: write
    concurrency:
      group: "pages"
      cancel-in-progress: false
    steps:
      - uses: actions/checkout@v4

      - uses: cachix/install-nix-action@v25
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - uses: cachix/cachix-action@v14
        with:
          name: dallas-college-lmic
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Pull frontend build from cache
        run: |
          # This pulls the pre-built frontend from Cachix (built in Build workflow)
          nix build .#frontend

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './result'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
