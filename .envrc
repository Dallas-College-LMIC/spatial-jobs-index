use flake .

# Load backend database credentials if they exist
if [[ -f backend/.env ]]; then
  set -a
  source backend/.env
  set +a
  # Construct the DATABASE_URI for postgres-mcp
  export DATABASE_URI="postgresql://${USERNAME}:${PASS}@${URL}:5432/${DB}"
fi

# Frontend environment variables
export VITE_API_BASE_URL=http://localhost:8000

# Python virtual environment setup for backend
# This is activated when in the backend directory
if [[ "$PWD" == */backend ]]; then
  if [[ ! -d .venv ]]; then
    uv venv
    uv sync --no-dev --group test
  else
    source .venv/bin/activate
    # Only sync if pyproject.toml is newer than .venv
    if [[ pyproject.toml -nt .venv ]]; then
      echo "Dependencies may have changed, running uv sync..."
      uv sync --no-dev --group test
    fi
  fi
fi

# Helper function to switch environments
layout_backend() {
  cd backend
  echo "Switched to backend directory"
}

layout_frontend() {
  cd frontend
  echo "Switched to frontend directory"
}

# Print available commands
echo "Spatial Jobs Index Monorepo"
echo ""
echo "Quick commands:"
echo "  direnv allow     - Enable direnv for this directory"
echo "  layout_backend   - Switch to backend directory"
echo "  layout_frontend  - Switch to frontend directory"
echo ""
echo "Nix commands:"
echo "  nix run          - Run both services"
echo "  nix run .#backend   - Run backend only"
echo "  nix run .#frontend  - Run frontend only"
